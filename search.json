[{"path":"https://mnr.github.io/rpigpior/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 rpigpior authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mnr.github.io/rpigpior/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Niemann-Ross. Author, maintainer, copyright holder.","code":""},{"path":"https://mnr.github.io/rpigpior/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Niemann-Ross M (2023). rpigpior: Provides R Access Raspberry Pi. https://github.com/mnr/rpigpior, https://mnr.github.io/rpigpior/.","code":"@Manual{,   title = {rpigpior: Provides R with Access to the Raspberry Pi},   author = {Mark Niemann-Ross},   year = {2023},   note = {https://github.com/mnr/rpigpior, https://mnr.github.io/rpigpior/}, }"},{"path":"https://mnr.github.io/rpigpior/index.html","id":"rpigpior","dir":"","previous_headings":"","what":"Provides R with Access to the Raspberry Pi","title":"Provides R with Access to the Raspberry Pi","text":"rpigpior allows R programming language access Raspberry Pi GPIO using libgpiod. libgpiod already included Raspbian, nothing else install. rpigpior implements six tools provided libgpiod GPIO access: gpiodetect - list gpiochips present system, names, labels number GPIO lines gpioinfo - list lines, gpiochip, offset, name, direction, use consumer name configured attributes, active state, bias, drive, edge detection debounce period gpioget - read values specified GPIO lines gpioset - set values specified GPIO lines, holding lines process killed otherwise exits gpiomon - wait edge events GPIO lines, specify edges watch , many events process exiting, events reported console gpiofind - Find GPIO line name. output command can used input gpioget & gpioset rpigpior also provides utilities use R programming language Raspberry Pi: .rpi - Returns TRUE code running Raspbian rpi_get - Returns value board level pin (1-40) error pin isn’t data line (3.3v, 5v, GROUND)","code":""},{"path":"https://mnr.github.io/rpigpior/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Provides R with Access to the Raspberry Pi","text":"rpigpior hosted github. arrives cran, can install development version rpigpior GitHub : documentation tell use devtools, install.packages(\"devtools\") Raspberry Pi onerous task. ’ve installed, use library just like R package: Related mailing list: linux-gpio@vger.kernal.org","code":"remotes::install_github(\"mnr/rpigpior\") library(rpigpior)"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://mnr.github.io/rpigpior/reference/gpiodetect.html","id":null,"dir":"Reference","previous_headings":"","what":"Find gpiochips on this system — gpiodetect","title":"Find gpiochips on this system — gpiodetect","text":"Find gpiochips system","code":""},{"path":"https://mnr.github.io/rpigpior/reference/gpiodetect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find gpiochips on this system — gpiodetect","text":"","code":"gpiodetect()"},{"path":"https://mnr.github.io/rpigpior/reference/gpiodetect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find gpiochips on this system — gpiodetect","text":"chr vector name, label, number GPIO lines. Typically return something like following: gpiochip0 [pinctrl-bcm2711] (58 lines) gpiochip1 [raspberrypi-exp-gpio] (8 lines)","code":""},{"path":"https://mnr.github.io/rpigpior/reference/gpiodetect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find gpiochips on this system — gpiodetect","text":"","code":"if (FALSE) { # is.rpi() gpiodetect() }"},{"path":"https://mnr.github.io/rpigpior/reference/gpiofind.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the chip and line for a named function — gpiofind","title":"Find the chip and line for a named function — gpiofind","text":"Identifies gpiochip gpioline. example, `gpiofind(\"SCL0\")` return \"gpiochip0 45\". Note gpioset gpioget accept line names place line numbers identify proper gpiochip using gpiofind behind scenes.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/gpiofind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the chip and line for a named function — gpiofind","text":"","code":"gpiofind(gpio_name)"},{"path":"https://mnr.github.io/rpigpior/reference/gpiofind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the chip and line for a named function — gpiofind","text":"gpio_name","code":""},{"path":"https://mnr.github.io/rpigpior/reference/gpiofind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the chip and line for a named function — gpiofind","text":"chip name line number.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/gpiofind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the chip and line for a named function — gpiofind","text":"","code":"if (FALSE) { # is.rpi()  gpiofind(\"SCL0\") # returns \"gpiochip0 45\"  gpioget(gpiofind(\"SCL0\")) # returns status of \"gpiochip0 45\" }"},{"path":"https://mnr.github.io/rpigpior/reference/gpioget.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves the state of a single pin on the GPIO — gpioget","title":"Retrieves the state of a single pin on the GPIO — gpioget","text":"Retrieves state single pin GPIO","code":""},{"path":"https://mnr.github.io/rpigpior/reference/gpioget.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves the state of a single pin on the GPIO — gpioget","text":"","code":"gpioget(gpio_line, gpio_chip = 0, gpio_active = TRUE, gpio_bias = \"as-is\")"},{"path":"https://mnr.github.io/rpigpior/reference/gpioget.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves the state of a single pin on the GPIO — gpioget","text":"gpio_line Retrieve state pin. Uses BCM numbering. can single number vector line numbers gpio_chip Retrieve pin info chip number chip specification. Defaults chip 0. can number name gpiochip0. Chips listed gpiodetect() gpio_active Set line active state, value return signal high. gpio_active = FALSE inverts active state line gpio_bias Set line bias one following: -(default), disable, pull-, pull-","code":""},{"path":"https://mnr.github.io/rpigpior/reference/gpioget.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves the state of a single pin on the GPIO — gpioget","text":"vector 1 0 length gpio_line indicating state pin","code":""},{"path":"https://mnr.github.io/rpigpior/reference/gpioget.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves the state of a single pin on the GPIO — gpioget","text":"","code":"if (FALSE) { # is.rpi() # read the value of a single gpio line gpioget(gpio_chip = 0, gpio_line = 21)  # Read two values at the same time gpioget(gpio_chip = 0, gpio_line = c(21,19))  # Specify gpiochip by name gpioget(gpio_chip = \"gpiochip0\", gpio_line = 21) }"},{"path":"https://mnr.github.io/rpigpior/reference/gpioinfo.html","id":null,"dir":"Reference","previous_headings":"","what":"List all lines of a gpio chip — gpioinfo","title":"List all lines of a gpio chip — gpioinfo","text":"List lines specified gpio chips, names, consumers, direction, active state additional flags. aware lines available Raspberry Pi pins.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/gpioinfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all lines of a gpio chip — gpioinfo","text":"","code":"gpioinfo(gpio_chip)"},{"path":"https://mnr.github.io/rpigpior/reference/gpioinfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all lines of a gpio chip — gpioinfo","text":"gpio_chip GPIO chip search. Probably 0, 1, something like gpiochip0","code":""},{"path":"https://mnr.github.io/rpigpior/reference/gpioinfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all lines of a gpio chip — gpioinfo","text":"vector. first element identifies chip number lines.     following elements contain information gpio line Line Number - BCM number. may different pinout number. example, Raspberry Pi Pin 1 3.3 volts, ID_SCL Line Name - descriptive name line. example, BCM Line 0 identified ID_SDA shows Raspberry Pi pin 3 Used/unused status - something talking line? Input/Output mode - Raspberry Pi pins can set input output Active-High, Active-Low - line closed, indicate ?","code":""},{"path":"https://mnr.github.io/rpigpior/reference/gpioinfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all lines of a gpio chip — gpioinfo","text":"","code":"if (FALSE) { # is.rpi() gpioinfo(0) }"},{"path":"https://mnr.github.io/rpigpior/reference/is.rpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide information about the Operating System — is.rpi","title":"Provide information about the Operating System — is.rpi","text":"Returns TRUE code running Raspbian return information operating system.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/is.rpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide information about the Operating System — is.rpi","text":"","code":"is.rpi(onlyThis = \"IsThisRPI\")"},{"path":"https://mnr.github.io/rpigpior/reference/is.rpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide information about the Operating System — is.rpi","text":"onlyThis value passed onlyThis, .rpi() return logical 'onlyThis' specified, '.rpi()' return value field /etc/os-release. typical values found os-release PRETTY_NAME concatenation NAME, VERSION_ID, VERSION NAME name OS, typically \"Raspbian GNU/LINUX\" VERSION_ID version. Currently = 11 VERSION concatenation VERSION_ID (VERSION_CODENAME) VERSION_CODENAME OS Name. Currently = \"bullseye\" ID OS. Currently = \"raspbian\" ID_LIKE OS base. Currently = \"debian\" HOME_URL Currently = \"http://www.raspbian.org\" SUPPORT_URL Currently = \"http://www.raspbian.org/RaspbianForums\" BUG_REPORT Currently = \"http://www.raspbian.org/RaspbianBugs\"","code":""},{"path":"https://mnr.github.io/rpigpior/reference/is.rpi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide information about the Operating System — is.rpi","text":"`onlyThis` specified, returns value. Otherwise returns TRUE running Raspbian","code":""},{"path":"https://mnr.github.io/rpigpior/reference/is.rpi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide information about the Operating System — is.rpi","text":"","code":"if (FALSE) { # is.rpi() is.rpi() is.rpi(\"NAME\") }"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the value of a RPi Pin — rpi_get","title":"Retrieve the value of a RPi Pin — rpi_get","text":"Returns value one specified board-level pin number (0-40). Stops pin valid data line.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the value of a RPi Pin — rpi_get","text":"","code":"rpi_get(pin_number)"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the value of a RPi Pin — rpi_get","text":"pin_number Raspberry Pi GPIO board level pin number 1 40. example, Pin #1 located upper left provides 3.3 volts. Pin #40 located lower right location GPIO21.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the value of a RPi Pin — rpi_get","text":"named vector value pin number.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the value of a RPi Pin — rpi_get","text":"","code":"rpi_get(1) # produces error since pin #1 is not data #> Error in rpi_pinToBCM(pin_number): Pin 1 provides 3.3v and is not a data line. rpi_get(40) # returns a named vector of the state of GPIO21. i.e. return[\"GPIO21\"] = 1 #> Error in system(gpio_sysCall, intern = TRUE): error in running command rpi_get(c(7, 40)) # returns a named vector of values from pins 7 and 40 #> Error in system(gpio_sysCall, intern = TRUE): error in running command"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pinToBCM.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a RPi pin number to BCM line — rpi_pinToBCM","title":"Converts a RPi pin number to BCM line — rpi_pinToBCM","text":"Look board pin number return BCM_line line_name     Pin number physical board Raspberry pi.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pinToBCM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a RPi pin number to BCM line — rpi_pinToBCM","text":"","code":"rpi_pinToBCM(pin_number)"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pinToBCM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a RPi pin number to BCM line — rpi_pinToBCM","text":"pin_number pin found Raspberry Pi board. Numbered 1 40.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pinToBCM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a RPi pin number to BCM line — rpi_pinToBCM","text":"named vector.      bcm_line = broadcom line connected pin      pin_name = broadcom name RXD1 GPIO21","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pinToBCM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Converts a RPi pin number to BCM line — rpi_pinToBCM","text":"checks valid range pins (1:40) valid input/output lines. prevents trying read 3.3v ground line.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pinToBCM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a RPi pin number to BCM line — rpi_pinToBCM","text":"","code":"rpi_pinToBCM(1) # produces error since pin #1 is not data #> Error in rpi_pinToBCM(1): Pin 1 provides 3.3v and is not a data line. rpi_pinToBCM(40) # returns a named vector where bcm_line = 21 and pin_name = GPIO21 #> GPIO21  #>     21"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pin_desc.html","id":null,"dir":"Reference","previous_headings":"","what":"Raspberry Pi Pins — rpi_pin_desc","title":"Raspberry Pi Pins — rpi_pin_desc","text":"board-level description 40 GPIO pins found Raspberry Pi.     different wiring pi BCM numbering schemes. Instead, reflects function pins physical location board.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pin_desc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raspberry Pi Pins — rpi_pin_desc","text":"","code":"rpi_pin_desc"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pin_desc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Raspberry Pi Pins — rpi_pin_desc","text":"## `rpi_pin_desc` data frame 40 rows two columns:","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pin_desc.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Raspberry Pi Pins — rpi_pin_desc","text":"https://www.raspberrypi.com/documentation/computers/os.html#gpio---40-pin-header","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn lines on or off — rpi_set","title":"Turn lines on or off — rpi_set","text":"Turn lines ","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn lines on or off — rpi_set","text":"","code":"rpi_set(pin_number, onOff)"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn lines on or off — rpi_set","text":"pin_number one pin numbers found Raspberry pi GPIO. Use actual pin numbers (.e. 1:40) onOff vector length pin_number values 0 1 turn line ","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn lines on or off — rpi_set","text":"value returned","code":""},{"path":[]},{"path":"https://mnr.github.io/rpigpior/news/index.html","id":"rpigpior-010","dir":"Changelog","previous_headings":"","what":"rpigpior 0.1.0","title":"rpigpior 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
