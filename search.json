[{"path":"https://mnr.github.io/rpigpior/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 rpigpior authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mnr.github.io/rpigpior/articles/gpioCode.html","id":"gpio-implies-connecting-wires","dir":"Articles","previous_headings":"","what":"GPIO implies connecting wires","title":"How to write GPIO Code with rpigpiodr and R","text":"stray world Raspberry Pi, ’s intent connect sensors devices GPIO pins. implies circuits wires. can show , assume already gone excellent tutorials Raspberry Pi foundation places LinkedIn Learning.","code":""},{"path":"https://mnr.github.io/rpigpior/articles/gpioCode.html","id":"reading-a-switch","dir":"Articles","previous_headings":"","what":"Reading a switch","title":"How to write GPIO Code with rpigpiodr and R","text":"Let’s talk illustration. Connecting switch Raspberry Pi","code":""},{"path":"https://mnr.github.io/rpigpior/articles/gpioCode.html","id":"pins-and-identifiers","dir":"Articles","previous_headings":"Reading a switch","what":"Pins and Identifiers","title":"How to write GPIO Code with rpigpiodr and R","text":"bottom picture Raspberry Pi. Along top two rows pins expose GPIO. several ways identify pins: Physical/Board - identification scheme used rpigpior. number pin board. Pin 1 inner (lower) left side. Pin 2 outer (upper) left side. Pin 40 outer right side. diagram, ’ll see yellow wire connected. BCM - signal found Broadcom chip (BCM2835 others) used power GPIO. example, Board pin 5 (third pin left lower (inside) row) connected BCM signal line 3. ’ll often see referred GPIO03. Yes, confusing, make sense understand designers . Wiring Pi - system written admirers Arduino. Wiring Pi popular among C programming crowd. don’t use rpigpior.","code":""},{"path":"https://mnr.github.io/rpigpior/articles/gpioCode.html","id":"schematics","dir":"Articles","previous_headings":"Reading a switch","what":"Schematics","title":"How to write GPIO Code with rpigpiodr and R","text":"top illustration white box grid dots. called breadboard exactly look like. top bottom two horizontal rows (four rows total). holes horizontal row electrically connected together. called rails. attach five volts top right corner hole, read five volts top left corner. middle two grids separated gutter. grid five rows thirty columns. holes column connected - across grid. attached five volts first column, first row, read five volts first column, fifth row. Breadboards used wires, resistors, capacitors, switches, lights, microcircuits (transistors) quickly prototype electrical circuits. case, switch connected Raspberry Pi yellow red wire.","code":""},{"path":"https://mnr.github.io/rpigpior/articles/gpioCode.html","id":"connect-a-switch-to-the-raspberry-pi","dir":"Articles","previous_headings":"Reading a switch","what":"Connect a switch to the Raspberry Pi","title":"How to write GPIO Code with rpigpiodr and R","text":"illustration shows connect pushbutton Raspberry Pi. case, red wire connects board pin 17 one side pushbutton. Board pin 17 supplies 3.3 volts DC. yellow wire connects board pin 40 side pushbutton. Board pin 40 connects Broadcom microcircuit exposes GPIO21. allows Raspberry Pi read state pushbutton.","code":""},{"path":"https://mnr.github.io/rpigpior/articles/gpioCode.html","id":"programming","dir":"Articles","previous_headings":"","what":"Programming","title":"How to write GPIO Code with rpigpiodr and R","text":"Consider code: pass () loop, program read state board pin 40 rpi_get(40). button pushed, print(\"Button Pushed\"). pin 40 pushed, print(\"Button pushed\")","code":"library(rpigpior)  while (TRUE) {   if (rpi_get(40)) {     print(\"Button pushed\")   } else {     print(\"Button not pushed\")   } }"},{"path":"https://mnr.github.io/rpigpior/articles/gpioCode.html","id":"setting-a-pin","dir":"Articles","previous_headings":"","what":"Setting a pin","title":"How to write GPIO Code with rpigpiodr and R","text":"Now consider new illustration, adds previous circuit.  sorts new things happening. red wire connects board pin 17 lowest rail. supplies 3.3 volts. black wire connects board pin 14 next lowest rail. supplies ground. wiring switch electrically previous illustration: yellow wire connects one side switch board pin 40 () red wire connects 3.3 volt rail side switch. LED (Light Emitting Diode) added breadboard. black wire connects top rail (ground) cathode LED. 220 ohm resistor connected anode LED. connected via green wire board pin 3.","code":""},{"path":"https://mnr.github.io/rpigpior/articles/gpioCode.html","id":"code-to-blink-an-led","dir":"Articles","previous_headings":"","what":"Code to blink an LED","title":"How to write GPIO Code with rpigpiodr and R","text":"Given circuit, code blink LED Notice addition rpi_set(3,1). tells Raspberry Pi turn board pin 3 . rpi_set(3,0) tells Raspberry Pi turn board pin 3 . loop reads state switch rpi_get(40). button pushed, LED attached pin 3 blink; 1 second , 3 seconds .","code":"library(rpigpior)  while (TRUE) {   if (rpi_get(40)) {          rpi_set(3,1)     Sys.sleep(1)          rpi_set(3,0)     Sys.sleep(3)   } }"},{"path":"https://mnr.github.io/rpigpior/articles/gpioCode.html","id":"hello-world","dir":"Articles","previous_headings":"","what":"hello world","title":"How to write GPIO Code with rpigpiodr and R","text":", Raspberry Pi equivalent hello world program. ’ve just learned: wire simple Raspberry Pi circuit switch LED. use R programming language control LED based Raspberry Pi","code":""},{"path":"https://mnr.github.io/rpigpior/articles/how-to-RPi.html","id":"how-to-set-up-r-for-a-raspberry-pi","dir":"Articles","previous_headings":"","what":"How to set up R for a Raspberry Pi","title":"How to Setup R on Raspberry Pi","text":"document describes set R programming language Raspberry Pi.","code":""},{"path":"https://mnr.github.io/rpigpior/articles/how-to-RPi.html","id":"a-brief-overview-of-the-raspberry-pi","dir":"Articles","previous_headings":"How to set up R for a Raspberry Pi","what":"A brief overview of the Raspberry Pi","title":"How to Setup R on Raspberry Pi","text":"Raspberry Pi Model 4 Hopefully really isn’t necessary, may wonder ’s fuss Raspberry Pi. ’s tidbits get started: ’s full-blown Linux computer, supports HDMI, ethernet, audio, camera, USB runs five volts DC. consumes somewhere around 3 6 watts. See dual rows pins? ’s General Purpose Input/Output (GPIO) pins. can read write outside world, plus support wide array sensors. lots support programming Python Depending model need, get hands Raspberry Pi somewhere $5 $45 USD.","code":""},{"path":"https://mnr.github.io/rpigpior/articles/how-to-RPi.html","id":"install-r","dir":"Articles","previous_headings":"How to set up R for a Raspberry Pi","what":"Install R","title":"How to Setup R on Raspberry Pi","text":"Raspberry Pi doesn’t come R ’ll need install . might want check R4Pi, website provides precompiled binaries. R4Pi website isn’t running, simply fall back apt-get… Unfortunately, installs R Root, cause problems install.packages( ) since don’t access library folder. fixed Raspberry Pi, didn’t take notes . figure , ’ll update document. apologies.","code":"sudo apt-get update sudo apt-get install r-base r-base-core"},{"path":"https://mnr.github.io/rpigpior/articles/how-to-RPi.html","id":"fix-the-app-menu","dir":"Articles","previous_headings":"How to set up R for a Raspberry Pi","what":"Fix the App Menu","title":"How to Setup R on Raspberry Pi","text":"Unfortunately, installer places R graphic menu instead programming tools. R appears graphic menu works, ’s just annoying. move programming menu: Go RPi menu (Raspberry Pi upper left). Select Preferences Select Main Menu Editor. provides dialog. dialog, select programming. right, select New Item: dialog, fill fields : Name=R Command=R Launch terminal. OK Presto change-O. R now programming menu.","code":""},{"path":"https://mnr.github.io/rpigpior/articles/how-to-RPi.html","id":"fix-the-icon","dir":"Articles","previous_headings":"How to set up R for a Raspberry Pi","what":"Fix the Icon","title":"How to Setup R on Raspberry Pi","text":"Almost done trivial stuff, Icon R app wrong. Let’s fix …  Raspberry Pi menu, right click R. Choose Properties Click Icon bring chooser System Theme, select rlogo.icon","code":""},{"path":"https://mnr.github.io/rpigpior/articles/how-to-RPi.html","id":"setup-geany","dir":"Articles","previous_headings":"How to set up R for a Raspberry Pi","what":"Setup Geany","title":"How to Setup R on Raspberry Pi","text":"Apparently posit working version RStudio Raspberry Pi. creation document, ’s ready prime time. use Geany instead - ’s installed Raspberry Pi, ’s IDE, ’s better poke eye. Configuring geany R things set using Geany R. learned Geany documentation: https://wiki.geany.org/howtos/using_geany_with_r https://wiki.geany.org/howtos/configurebuildmenu Start edit -> preferences -> terminal check execute programs VTE. runs R Geany terminal rather opening separate terminal window. isn’t necessary, just nice--. Next Build -> Set Build Commands opens dialog. Enter Rscript ./%f Execute : Command. setup, run R program selecting Build -> Execute. Graphs output saved next input file. dialog, go first row. Click cell Label enter something descriptive like “R CMD.” next cell (COMMAND) enter R CMD BATCH ./f . command now appears top Build menu. Selecting option run command, capturing STDOUT xxx.Rout file. Note file names spaces.","code":""},{"path":"https://mnr.github.io/rpigpior/articles/how-to-RPi.html","id":"install-libgpiod","dir":"Articles","previous_headings":"How to set up R for a Raspberry Pi","what":"Install libgpiod","title":"How to Setup R on Raspberry Pi","text":"Current versions Raspbian libgpiod installed default. get errors, use install necessary files:","code":"sudo apt-get update sudo apt-get install libgpiod-dev gpiod"},{"path":"https://mnr.github.io/rpigpior/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mark Niemann-Ross. Author, maintainer, copyright holder.","code":""},{"path":"https://mnr.github.io/rpigpior/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Niemann-Ross M (2023). rpigpior: Provides R Access Raspberry Pi. https://github.com/mnr/rpigpior, https://mnr.github.io/rpigpior/.","code":"@Manual{,   title = {rpigpior: Provides R with Access to the Raspberry Pi},   author = {Mark Niemann-Ross},   year = {2023},   note = {https://github.com/mnr/rpigpior, https://mnr.github.io/rpigpior/}, }"},{"path":"https://mnr.github.io/rpigpior/index.html","id":"rpigpior","dir":"","previous_headings":"","what":"Provides R with Access to the Raspberry Pi","title":"Provides R with Access to the Raspberry Pi","text":"rpigpior allows R programming language access Raspberry Pi GPIO using libgpiod. libgpiod already included Raspbian, nothing else install. rpigpior provides tools: .rpi - Returns TRUE code running Raspbian rpi_get - Returns value board level pin (1-40) error pin isn’t data line (3.3v, 5v, GROUND) rpi_set - Sets pin rpi_monitor - watches pin number rising falling events","code":""},{"path":"https://mnr.github.io/rpigpior/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Provides R with Access to the Raspberry Pi","text":"rpigpior hosted github. arrives cran, can install development version rpigpior GitHub : documentation tell use devtools, install.packages(\"devtools\") Raspberry Pi onerous task. ’ve installed, use library just like R package: Related mailing list: linux-gpio@vger.kernal.org","code":"remotes::install_github(\"mnr/rpigpior\") library(rpigpior)"},{"path":"https://mnr.github.io/rpigpior/index.html","id":"is-this-a-raspberry-pi","dir":"","previous_headings":"","what":"Is this a Raspberry Pi?","title":"Provides R with Access to the Raspberry Pi","text":"’s helpful check code running Raspberry Pi.","code":"if ( is.rpi() ) {    print(\"Yes, this is a RPi\") } else {    print (\"No, this is not a RPi\") }"},{"path":"https://mnr.github.io/rpigpior/index.html","id":"reading-a-pin","dir":"","previous_headings":"","what":"Reading a pin","title":"Provides R with Access to the Raspberry Pi","text":"connect switch board pin 40, code read : assumes switch board pin 40 “pushed” closed. way, diagram located articles section website (identified package description)","code":"library(rpigpior)  rpi_get(40) # reads board pin 40 rpi_get(c(7,40)) # reads board pins 7 and 40  > GPIO004  GPIO21         0       1"},{"path":"https://mnr.github.io/rpigpior/index.html","id":"turning-pins-on-and-off","dir":"","previous_headings":"","what":"Turning pins on and off","title":"Provides R with Access to the Raspberry Pi","text":"LEDs connected board pin 19, 21, 23, code turn , one , ","code":"library(rpigpior)  toggleThese <- c(19,21,23) rpi_set(toggleThese,1) Sys.sleep(1) rpi_set(toggleThese, c(1,0,1)) Sys.sleep(1) rpi_set(toggleThese, 0)"},{"path":"https://mnr.github.io/rpigpior/reference/is.rpi.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide information about the Operating System — is.rpi","title":"Provide information about the Operating System — is.rpi","text":"Returns TRUE code running Raspbian return information operating system.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/is.rpi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide information about the Operating System — is.rpi","text":"","code":"is.rpi(onlyThis = \"IsThisRPI\")"},{"path":"https://mnr.github.io/rpigpior/reference/is.rpi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide information about the Operating System — is.rpi","text":"onlyThis value passed onlyThis, .rpi() return logical 'onlyThis' specified, '.rpi()' return value field /etc/os-release. typical values found os-release PRETTY_NAME concatenation NAME, VERSION_ID, VERSION NAME name OS, typically \"Raspbian GNU/LINUX\" VERSION_ID version. Currently = 11 VERSION concatenation VERSION_ID (VERSION_CODENAME) VERSION_CODENAME OS Name. Currently = \"bullseye\" ID OS. Currently = \"raspbian\" ID_LIKE OS base. Currently = \"debian\" HOME_URL Currently = \"http://www.raspbian.org\" SUPPORT_URL Currently = \"http://www.raspbian.org/RaspbianForums\" BUG_REPORT Currently = \"http://www.raspbian.org/RaspbianBugs\"","code":""},{"path":"https://mnr.github.io/rpigpior/reference/is.rpi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide information about the Operating System — is.rpi","text":"`onlyThis` specified, returns value. Otherwise returns TRUE running Raspbian","code":""},{"path":"https://mnr.github.io/rpigpior/reference/is.rpi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide information about the Operating System — is.rpi","text":"","code":"if (FALSE) { # is.rpi() is.rpi() is.rpi(\"NAME\") }"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the value of a RPi Pin — rpi_get","title":"Retrieve the value of a RPi Pin — rpi_get","text":"Returns value one specified board-level pin number (0-40). Stops pin valid data line.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the value of a RPi Pin — rpi_get","text":"","code":"rpi_get(pin_number)"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the value of a RPi Pin — rpi_get","text":"pin_number Raspberry Pi GPIO board level pin number 1 40. example, Pin #1 located upper left provides 3.3 volts. Pin #40 located lower right location GPIO21.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the value of a RPi Pin — rpi_get","text":"named vector value pin number.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the value of a RPi Pin — rpi_get","text":"","code":"if (FALSE) { # is.rpi() rpi_get(1) # produces error since pin #1 is not data rpi_get(40) # returns a named vector of the state of GPIO21. i.e. return[\"GPIO21\"] = 1 rpi_get(c(7, 40)) # returns a named vector of values from pins 7 and 40 }"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_monitor.html","id":null,"dir":"Reference","previous_headings":"","what":"Monitor an RPi pin — rpi_monitor","title":"Monitor an RPi pin — rpi_monitor","text":"Watch Raspberry pi GPIO pin (pins) changes.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_monitor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Monitor an RPi pin — rpi_monitor","text":"","code":"rpi_monitor(pin_number, numEvents = 0, edge = \"both\", timeout = 0)"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_monitor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Monitor an RPi pin — rpi_monitor","text":"pin_number one pin numbers found Raspberry pi GPIO. Use actual pin numbers (.e. 1:40) numEvents number events collect. Defaults 10 edge rising|falling|timeout number seconds collect events","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_monitor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Monitor an RPi pin — rpi_monitor","text":"list events  raw text event event: RISING EDGE|FALLING EDGE line: bcm line (board pin) exhibiting change timestamp: seconds component timestamp: nanoseconds component","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_monitor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Monitor an RPi pin — rpi_monitor","text":"","code":"if (FALSE) { # is.rpi() rpi_monitor(21) rpi_monitor(21, numEvents=20) }"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pinToBCM.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a RPi pin number to BCM line — rpi_pinToBCM","title":"Converts a RPi pin number to BCM line — rpi_pinToBCM","text":"Look board pin number return BCM_line line_name     Pin number physical board Raspberry pi.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pinToBCM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a RPi pin number to BCM line — rpi_pinToBCM","text":"","code":"rpi_pinToBCM(pin_number)"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pinToBCM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a RPi pin number to BCM line — rpi_pinToBCM","text":"pin_number pin found Raspberry Pi board. Numbered 1 40.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pinToBCM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a RPi pin number to BCM line — rpi_pinToBCM","text":"named vector.      bcm_line = broadcom line connected pin      pin_name = broadcom name RXD1 GPIO21","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pinToBCM.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Converts a RPi pin number to BCM line — rpi_pinToBCM","text":"checks valid range pins (1:40) valid input/output lines. prevents trying read 3.3v ground line.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pinToBCM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a RPi pin number to BCM line — rpi_pinToBCM","text":"","code":"if (FALSE) { # is.rpi() rpi_pinToBCM(1) # produces error since pin #1 is not data rpi_pinToBCM(40) # returns a named vector where bcm_line = 21 and pin_name = GPIO21 }"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pin_desc.html","id":null,"dir":"Reference","previous_headings":"","what":"Raspberry Pi Pins — rpi_pin_desc","title":"Raspberry Pi Pins — rpi_pin_desc","text":"board-level description 40 GPIO pins found Raspberry Pi.     different wiring pi BCM numbering schemes. Instead, reflects function pins physical location board.","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pin_desc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raspberry Pi Pins — rpi_pin_desc","text":"","code":"rpi_pin_desc"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pin_desc.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Raspberry Pi Pins — rpi_pin_desc","text":"## `rpi_pin_desc` data frame 40 rows two columns: description. Primary function pin secondary. Secondary function pin","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_pin_desc.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Raspberry Pi Pins — rpi_pin_desc","text":"https://www.raspberrypi.com/documentation/computers/os.html#gpio---40-pin-header","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn lines on or off — rpi_set","title":"Turn lines on or off — rpi_set","text":"Turn lines ","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn lines on or off — rpi_set","text":"","code":"rpi_set(pin_number, onOff)"},{"path":"https://mnr.github.io/rpigpior/reference/rpi_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn lines on or off — rpi_set","text":"pin_number one pin numbers found Raspberry pi GPIO. Use actual pin numbers (.e. 1:40) onOff vector length pin_number values 0 1 turn line ","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn lines on or off — rpi_set","text":"value returned","code":""},{"path":"https://mnr.github.io/rpigpior/reference/rpi_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn lines on or off — rpi_set","text":"","code":"if (FALSE) { # is.rpi() # turns pin 19 on, 21 off, and 23 on. # This corresponds to gpio09, gpio10, and gpio11 rpi_set(pin_number = c(19, 21, 23), onOff = c(1,0,1))  toggleThesePins <- c(19,21,23) rpi_set(toggleThesePins, 1) # turns all three pins on. onOff is recycled Sys.sleep(1) rpi_set(toggleThesePins, c(0,1,0)) # turns off pins 19 and 23 Sys.sleep(1) rpi_set(toggleThesePins, 0) # turns off all pins }"},{"path":"https://mnr.github.io/rpigpior/news/index.html","id":"rpigpior-010","dir":"Changelog","previous_headings":"","what":"rpigpior 0.1.0","title":"rpigpior 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
